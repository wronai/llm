[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "wronai"
dynamic = ["version"]
description = "Polski model językowy - demokratyzacja AI dla języka polskiego"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Tom Sapletta", email = "info@softreck.dev"}
]
maintainers = [
    {name = "Tom Sapletta", email = "info@softreck.dev"}
]
keywords = [
    "artificial intelligence",
    "natural language processing",
    "polish language",
    "large language model",
    "machine learning",
    "transformers",
    "nlp",
    "ai"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "accelerate>=0.24.0",
    "peft>=0.6.0",
    "datasets>=2.14.0",
    "evaluate>=0.4.0",
    "bitsandbytes>=0.41.0",
    "scipy>=1.10.0",
    "safetensors>=0.4.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "tqdm>=4.65.0",
    "wandb>=0.15.0",
    "tensorboard>=2.13.0",
    "tokenizers>=0.14.0",
    "sentencepiece>=0.1.99",
    "regex>=2023.6.3",
    "pyyaml>=6.0",
    "omegaconf>=2.3.0",
    "loguru>=0.7.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "isort>=5.12.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
]
inference = [
    "fastapi>=0.103.0",
    "uvicorn>=0.23.0",
    "streamlit>=1.26.0",
    "gradio>=3.50.0",
]
advanced = [
    "flash-attn>=2.3.0",
    "deepspeed>=0.10.0",
    "ray>=2.7.0",
    "triton>=2.1.0",
]
polish = [
    "spacy>=3.6.0",
    "pl_core_news_sm @ https://github.com/explosion/spacy-models/releases/download/pl_core_news_sm-3.6.0/pl_core_news_sm-3.6.0-py3-none-any.whl",
    "morfologik>=0.1.0",
]
all = ["wronai[dev,docs,inference,advanced,polish]"]

[project.urls]
Homepage = "https://github.com/wronai/llm"
Documentation = "https://wronai.readthedocs.io"
Repository = "https://github.com/wronai/llm.git"
"Bug Tracker" = "https://github.com/wronai/llm/issues"
"Feature Requests" = "https://github.com/wronai/llm/discussions"
Changelog = "https://github.com/wronai/llm/blob/main/CHANGELOG.md"

[project.scripts]
wronai-train = "scripts.train:main"
wronai-inference = "scripts.inference:main"
wronai-prepare-data = "scripts.prepare_data:main"
wronai-evaluate = "scripts.evaluate:main"

[tool.setuptools]
packages = ["wronai"]

[tool.setuptools.dynamic]
version = {attr = "wronai.version.__version__"}

[tool.setuptools.package-data]
wronai = [
    "data/polish/*.txt",
    "configs/*.yaml",
    "web/templates/*.html",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["wronai"]
known_third_party = ["torch", "transformers", "datasets"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "datasets.*",
    "accelerate.*",
    "peft.*",
    "bitsandbytes.*",
    "wandb.*",
    "spacy.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["wronai"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]